import sphinx_rtd_theme 

# JSON of the state object
import json
json_state = """{{ json_state|safe }}"""
state_dict = json.loads(json_state)
class AttributeDict(dict): 
    __getattr__ = dict.__getitem__
    __setattr__ = dict.__setitem__

state = AttributeDict(state_dict)
state['core'] = AttributeDict(state['core'])
state['fs'] = AttributeDict(state['fs'])
state['settings'] = AttributeDict(state['settings'])
state['vcs'] = AttributeDict(state['vcs'])

# Add RTD Template Path.
if 'templates_path' in globals():
    templates_path.insert(0, '{{ state.settings.TEMPLATE_PATH }}')
else:
    templates_path = ['{{ state.settings.TEMPLATE_PATH }}', 'templates', '_templates',
                      '.templates']

# Add RTD Static Path. Add to the end because it overwrites previous files.
if 'html_static_path' in globals():
    html_static_path.append('{{ state.settings.STATIC_PATH }}')
else:
    html_static_path = ['_static', '{{ state.settings.STATIC_PATH }}']

# Add RTD Theme Path. 
if 'html_theme_path' in globals():
    html_theme_path.append('{{ state.settings.TEMPLATE_PATH }}')
else:
    html_theme_path = ['_themes', '{{ state.settings.TEMPLATE_PATH }}']

# Add custom RTD extension
if 'extensions' in globals():
    extensions.append("readthedocs_ext.readthedocs")
else:
    extensions = ["readthedocs_ext.readthedocs"]

# Add RTD Theme only if they aren't overriding it already
using_rtd_theme = False
if 'html_theme' in globals():
    if html_theme in ['default']:
        # Allow people to bail with a hack of having an html_style
        if not 'html_style' in globals():
            html_theme = 'sphinx_rtd_theme'
            using_rtd_theme = True
            html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]
else:
    html_theme = 'sphinx_rtd_theme'
    using_rtd_theme = True
    html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]

if globals().get('websupport2_base_url', False):
    websupport2_base_url = '{{ api_host }}/websupport'
    if 'http' not in settings.MEDIA_URL:
        websupport2_static_url = '{{ settings.STATIC_URL }}'
    else:
        websupport2_static_url = '{{ settings.MEDIA_URL }}/static'

#Add project information to the template context.
context = {
    'READTHEDOCS': True,

    'using_theme': using_rtd_theme,
    'html_theme': html_theme,
    'using_theme': (html_theme == "default"),
    'new_theme': (html_theme == "sphinx_rtd_theme"),
    'source_suffix': globals().get('source_suffix', '.rst'),

    'current_version': "{{ state.core.version }}",
    'MEDIA_URL': "{{ state.settings.MEDIA_URL }}",
    'PRODUCTION_DOMAIN': "{{ state.settings.PRODUCTION_DOMAIN }}",
    'versions': [{% for version in state.core.versions %}
    ("{{ version.slug }}", "/{{ version.project.language }}/{{ version.slug}}/"),{% endfor %}
    ],
    'downloads': [ {% for key, val in downloads.items %}
    ("{{ key }}", "{{ val }}"),{% endfor %}
    ],
    'slug': '{{ state.core.slug }}',
    'name': u'{{ state.core.name }}',
    'rtd_language': u'{{ state.core.language }}',
    'canonical_url': '{{ state.core.clean_canonical_url }}',
    'analytics_code': '{{ state.core.analytics_code }}',
    'single_version': {{ state.core.single_version }},
    'conf_py_path': '{{ state.fs.conf_file }}',
    'api_host': '{{ state.settings.API_HOST }}',
    'user_analytics_code': '{{ project.analytics_code|default_if_none:'' }}',
    'global_analytics_code': '{{ state.core.analytics_code }}',
    'commit': '{{ commit }}',
}

if state.vcs.display_github:
    context['github_user'] = state.vcs.username
    context['github_repo'] = state.vcs.repo
    context['github_version'] = state.vcs.branch
    context['display_github'] = state.vcs.display_github

if state.vcs.display_bitbucket:
    context['bitbucket_user'] = state.vcs.username
    context['bitbucket_repo'] = state.vcs.repo
    context['bitbucket_version'] = state.vcs.branch
    context['display_bitbucket'] = state.vcs.display_bitbucket

if 'html_context' in globals():
    html_context.update(context)
else:
    html_context = context

